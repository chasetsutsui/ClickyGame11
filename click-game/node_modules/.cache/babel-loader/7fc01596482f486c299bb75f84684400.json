{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\chase\\\\click-game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"clicky game\"), this.state.friends.map(friend => React.createElement(Card, {\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      topScore: 0\n    };\n\n    this.handleCorrectGuess = newData => {\n      const {\n        topScore,\n        score\n      } = this.state;\n      const newScore = score + 1;\n      const newTopScore = Math.max(newScore, topScore);\n      this.setState({\n        data: this.shuffleData(newData),\n        score: newScore,\n        topSCore: newTopScore\n      });\n    };\n\n    this.resetData = data => {\n      const resetData = data.map(item => ({ ...item,\n        clicked: false\n      }));\n      return this.shuffleData(resetData);\n    };\n\n    this.shuffleData = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    this.handleItemClick = id => {\n      let guessedCorrectly = false;\n      const newData = this.state.data.map(item => {\n        const newItem = { ...item\n        };\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.shuffleData(this.state.data)\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:/Users/chase/click-game/src/App.js"],"names":["React","Component","Card","Wrapper","Title","friends","App","state","render","map","friend","id","name","image","Game","data","score","topScore","handleCorrectGuess","newData","newScore","newTopScore","Math","max","setState","shuffleData","topSCore","resetData","item","clicked","i","length","j","floor","random","temp","handleItemClick","guessedCorrectly","newItem","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  \n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>clicky game</Title>\n        {this.state.friends.map(friend => (\n          <Card\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\nclass Game extends Component {\n    state = {\n        data,\n        score: 0,\n        topScore: 0\n    };\n\n    componentDidMount() {\n        this.setState({ data: this.shuffleData(this.state.data) });\n    }\n\n    handleCorrectGuess = newData => {\n        const { topScore, score } = this.state;\n        const newScore = score + 1;\n        const newTopScore = Math.max(newScore, topScore);\n\n        this.setState({\n            data: this.shuffleData(newData),\n            score: newScore,\n            topSCore: newTopScore\n        });\n    };\n\n    resetData = data => {\n        const resetData = data.map(item => ({ ...item, clicked: false }));\n        return this.shuffleData(resetData);\n    };\n\n    shuffleData = data => {\n        let i = data.length - 1;\n        while (i > 0) {\n            const j = Math.floor(Math.random() * (i + 1));\n            const temp = data[i];\n            data[i] = data[j];\n            data[j] = temp;\n            i--;\n        }\n\n        return data;\n\n    };\n\n    handleItemClick = id => {\n        let guessedCorrectly = false;\n        const newData = this.state.data.map(item => {\n            const newItem = { ...item };\n            if (newItem.id === id) {\n                if (!newItem.clicked) {\n                    newItem.clicked = true;\n                    guessedCorrectly = true;\n                }\n            }\n        })\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}